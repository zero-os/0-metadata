# DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.

"""
Auto-generated class for link
"""
from .EnumLinkType import EnumLinkType
from six import string_types

from . import client_support


class link(object):
    """
    auto-generated. don't touch.
    """

    @staticmethod
    def create(**kwargs):
        """
        :type destdir: int
        :type destname: int
        :type moddate: int
        :type name: string_types
        :type type: EnumLinkType
        :rtype: link
        """

        return link(**kwargs)

    def __init__(self, json=None, **kwargs):
        if json is None and not kwargs:
            raise ValueError('No data or kwargs present')

        class_name = 'link'
        data = json or kwargs

        # set attributes
        data_types = [int]
        self.destdir = client_support.set_property('destdir', data, data_types, False, [], False, True, class_name)
        data_types = [int]
        self.destname = client_support.set_property('destname', data, data_types, False, [], False, True, class_name)
        data_types = [int]
        self.moddate = client_support.set_property('moddate', data, data_types, False, [], False, True, class_name)
        data_types = [string_types]
        self.name = client_support.set_property('name', data, data_types, False, [], False, True, class_name)
        data_types = [EnumLinkType]
        self.type = client_support.set_property('type', data, data_types, False, [], False, True, class_name)

    def __str__(self):
        return self.as_json(indent=4)

    def as_json(self, indent=0):
        return client_support.to_json(self, indent=indent)

    def as_dict(self):
        return client_support.to_dict(self)
