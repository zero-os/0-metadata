// DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.
package client

import (
	"net/http"
)

const (
	defaultBaseURI = "http://127.0.0.1:5000"
)

type The_0_Metadata struct {
	client     http.Client
	AuthHeader string // Authorization header, will be sent on each request if not empty
	BaseURI    string
	common     service // Reuse a single struct instead of allocating one for each service on the heap.

	Acl     *AclService
	Bdomain *BdomainService
	Bobject *BobjectService
	Dir     *DirService
	Group   *GroupService
	User    *UserService
}

type service struct {
	client *The_0_Metadata
}

func NewThe_0_Metadata() *The_0_Metadata {
	c := &The_0_Metadata{
		BaseURI: defaultBaseURI,
		client:  http.Client{},
	}
	c.common.client = c

	c.Acl = (*AclService)(&c.common)
	c.Bdomain = (*BdomainService)(&c.common)
	c.Bobject = (*BobjectService)(&c.common)
	c.Dir = (*DirService)(&c.common)
	c.Group = (*GroupService)(&c.common)
	c.User = (*UserService)(&c.common)

	return c
}
