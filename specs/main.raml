#%RAML 1.0
title: "0-metadata"
description: "Generic metadata store"
version: 0.0.1
mediaType: application/json
documentation:
  - title: Extended documentation
    content: https://github.com/Jumpscale/0-metadata/tree/master/docs

types:
  CreateDirectory:
    type: object
    properties:
      name:
        type: string
        description: Name for the directory to be created
        required: false

  Inode:
    type: object
    properties:
      name:
        type: string
        description: Name for the file or directory entry
        required: true
      size:
        type: integer
        description: Size of the file. For directory entries this property will always be 0.
        required: false
      modified:
        type: integer
        description: |
          Epoch of the last modification time.
          - Files:
            - Creation time (post)
            - Or the last time the file content was set (put).
          - Directories:
            - Creation time (post)
            - Or the last time the directory was changed (put).
            - Or the last time an entry was added or removed
        required: false
      created:
        type: integer
        description: Epoch of the creation time
        required: false
      children:
        type: Inode[]
        description: |
          - Files: Always null
          - Directories: List of full or partial Inode objects
          required: false
      path:
        type: string
        description: Path of the Inode
        required: false
      type:
        enum: [file, dir]
        description: Inode type. "file" or "dir"
        required: true
    examples:
      directory:
        name: Geert
        type: dir
        size: 0
        modified: 1517426795
        created: 153689194
        children:
          - name: Lowie
            type: file
          - name: Arno
            type: file
        path: /belgium/flanders/berlare/Geert
      file:
        name: Geert
        type: file
        size: 193
        modified: 1517426795
        created: 153689194
        path: /belgium/flanders/berlare/Geert

/api/v1/root/{path:*}:
  get:
    description: Download resource.
    displayName: get
    queryParameters:
      depth:
        type: integer
        description: When listing directories, how deep to go
        default: 1
      inspect:
        type: boolean
        description: |
          If true and path points to a file, return the metadata only of the file
          otherwise return the content of the file as binary stream.
          This parameter is ignored when the path points to a resource.
        default: false
    responses:
      200:
        body:
          binary/octet-stream:
            description: when query parameter inspect is false
          application/json:
            description: when query parameter inspect is true
            type: Inode
      404:
        description: path not found
  post:
    description: Creating files or directories
    displayName: Create
    body:
      binary/octet-stream:
        description: In case when creating file
      application/json:
        type: CreateDirectory
        description: In case you create a directory
    responses:
      200:
        description: Inode meta data of the newly added entry
        body:
          type: Inode
      409:
        description: Path already exists
      404:
        description: Parent path not found
  put:
    description: Update directory settings or change file content
    displayName: Update
    body:
      binary/octet-stream:
        description: case when updating a file
      application/json:
        type: CreateDirectory
        description: in case you update a directory
    responses:
      200:
        body:
          type: Inode
          description: Inode meta data of the updated entry
      404:
        description: Path not found
  delete:
    description: Removing files or directories
    displayName: delete
    queryParameters:
      recursive:
        description: |
          In case path points to a directory that has child entries, the directory will be removed along with all its children.
          In case path points to a file, this parameter will be ignored.
        type: boolean
    responses:
      204:
        description: Node deleted
      400:
        description: Path has children and recursive is false
      404:
        description: Path not found